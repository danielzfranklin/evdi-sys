/* automatically generated by rust-bindgen 0.57.0 */

#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct wrapper_log_cb {
    pub function: ::std::option::Option<
        unsafe extern "C" fn(
            user_data: *mut ::std::os::raw::c_void,
            msg: *const ::std::os::raw::c_char,
        ),
    >,
    pub user_data: *mut ::std::os::raw::c_void,
}
#[test]
fn bindgen_test_layout_wrapper_log_cb() {
    assert_eq!(
        ::std::mem::size_of::<wrapper_log_cb>(),
        16usize,
        concat!("Size of: ", stringify!(wrapper_log_cb))
    );
    assert_eq!(
        ::std::mem::align_of::<wrapper_log_cb>(),
        8usize,
        concat!("Alignment of ", stringify!(wrapper_log_cb))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<wrapper_log_cb>())).function as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(wrapper_log_cb),
            "::",
            stringify!(function)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<wrapper_log_cb>())).user_data as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(wrapper_log_cb),
            "::",
            stringify!(user_data)
        )
    );
}
extern "C" {
    pub static mut wrapper_log_cb: wrapper_log_cb;
}
extern "C" {
    pub fn wrapper_evdi_set_logging(cb: wrapper_log_cb);
}
